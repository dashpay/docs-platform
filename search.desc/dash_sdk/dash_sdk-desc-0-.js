searchState.loadedDescShard("dash_sdk", 0, "Dash Platform Rust SDK\nDAPI request settings.\nVersion of the SDK\nBan DAPI address if node not responded or responded with …\nTimeout for establishing a connection.\nDash Core SDK implementation.\nCreate empty RequestSettings, which means no overrides …\nDefine enums that will wrap multiple requests/responses …\nDelegate the execution of a FromProof trait to an enum …\nDelegate the execution of a transport request to the …\nDefinitions of errors\nFill in settings defaults.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMocking support for Dash SDK.\nCombines two instances of RequestSettings with following …\nPlatform DAPI requests.\nNumber of retries until returning the last error.\nSdk entrypoint to Dash Platform.\nTimeout for a request.\nCore Fork Error\nOperation cancelled - cancel token was triggered, timeout, …\nConfiguration error\nSDK is not configured properly\nErrors returned by the context provider\nContext provider error\nCore client error, for example, connection error\nDash core error\nDAPI client error, for example, connection error\nDAPI mocks error\nData contract is invalid or not found, or some error …\nDrive error\nEpoch not found; we must have at least one epoch\nError type for the SDK\nGeneric Context provider error\nGeneric error\nInvalid Proved Response error\nProvided quorum is invalid\nMerkleBlockError\nDependency not found, for example data contract for a …\nProof verification error\nDPP error\nSDK operation timeout reached error\nTotal credits in Platform are not found; we must always …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait implemented by objects that can be used in mock …\nMocking support for messages.\nDeserialize the object from expectations\nDeserialize the message serialized with [mock_serialize()].\nSerialize the object to save into expectations\nSerialize the message to bytes for mocking purposes.\nExample ContextProvider that uses the Core gRPC API to …\nMocking mechanisms for Dash Platform SDK.\nThread-safe cache of various objects inside the SDK.\nContext provider that uses the Core gRPC API to fetch data …\nReturns function that uses ContextProvider to provide a …\nData contracts cache.\nDirectory where to store dumped data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to the value stored under <code>k</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new context provider.\nCreate new cache\nInsert a new value into the cache.\nQuorum public keys cache.\nSet the directory where to store dumped data.\nSet the Sdk to use when fetching data from Platform. This …\nMechanisms to mock Dash Platform SDK.\nExpect a Fetch request and return provided object.\nExpect a FetchMany request and return provided object.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLoad all expectations from files in a directory.\nReturns true when requests should use proofs.\nInterface between the Sdk and state of the application.\nDefault limit of epoch records returned by Platform.\nUnderstanding Data Contract versioning Data contract …\nRequest that is used to query documents from the Dash …\nDrive query struct\nTrait implemented by objects that can be fetched from …\nFetch multiple objects from Platform.\nThe identity is not stored inside of drive, because of …\nWrapper around query that allows to specify limit.\nMock ContextProvider that can read quorum keys from files.\nTrait implemented by objects that can be used as queries.\nType of request used to fetch data from Platform.\nType of request used to fetch multiple objects from …\nAdd an identity public key\nAdd identity public keys\nReturns function that uses ContextProvider to provide a …\nReturns the balance of the identity.\nBlock time\nSets the revision of the identity to +1.\nOperations to construct a path query.\nDataContract\nData contract ID\nDocument type\nDocument type for the data contract\nFetch single object from Platform.\nFetch single object from Platform.\nFetch single object from Platform by identifier.\nFetch single object from Platform by identifier.\nFetch multiple objects from Platform by their identifiers.\nFetch multiple objects from Platform by their identifiers.\nFetch (or search) multiple objects on the Dash Platform\nFetch (or search) multiple objects on the Dash Platform\nFetch multiple objects from Platform with limit.\nFetch multiple objects from Platform with limit.\nFetch single object from Platform with metadata.\nFetch single object from Platform with metadata.\nFetch single object from Platform with metadata and …\nFetch single object from Platform with metadata and …\nFetch single object from Platform.\nFetch single object from Platform.\nFinds the best index for the query.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a query Value to a <code>DriveQuery</code>.\nReads a serialized document and creates a Document from it.\nConverts a query Value to a <code>DriveQuery</code>.\nCreate a document from a platform value.\nConverts a SQL expression to a <code>DriveQuery</code>.\nConverts a query Value to a <code>DriveQuery</code>.\nGenerate data contract id based on owner id and identity …\nGenerates the document ID\nFetches the data contract for a specified data contract ID.\nGet first public key matching a purpose, security levels, …\nReturns a path query for non-primary keys given a document …\nGets the platform activation height from core. Once this …\nReturns a path query given a document type path and …\nReturns a public key for a given id\nReturns a public key for a given id\nGet the biggest public KeyID\nFetches the public key for a specified quorum.\nMock implementation of ContextProvider that returns keys …\nReturn a value given the path to its key and the document …\nReturn a value given the path to its key for a document …\nComputes the hash of an identity\nReturns the identifier of the identity.\nIncrease Identity balance\nIncrement revision\nInternal clauses\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the document to a map value consuming the document.\nConvenience method to get Partial Identity Info\nConvenience method to get Partial Identity Info\nConvert the document to a value consuming the document.\nReturns true if the query clause if for primary keys.\nChecks if public key security level is MASTER\nqueryset limit\nMax number of records returned\nLimit\nGenerates an identity public key with the maximum possible …\nCreate a new instance of MockContextProvider.\nCreate new DocumentQuery for provided contract and …\nGets a document by their primary key\nCreate new document query for provided document type name …\nCreate new document query based on a DriveDocumentQuery.\nCreated a new identity based on asset locks and keys\nOffset\nOrder by\n<code>order_by</code> clauses for the query\nReturns a reference to the public keys of the identity.\nReturns a mutable reference to the public keys of the …\nConsumes the <code>Identity</code> and returns the owned public keys.\nConverts the current instance into an instance of the …\nGet all keys for an identity with provided identifier.\nActual query to execute\nReturns a <code>QueryItem</code> given a start key and query direction.\nSet the directory where quorum keys are stored.\nGenerates a random authentication key and its …\nGenerates a random authentication key and its …\nGenerates a random authentication key based on the …\nGenerates a random ECDSA critical-level authentication …\nGenerates a random ECDSA high-level authentication public …\nGenerates a random ECDSA high-level authentication public …\nGenerates a random ECDSA high-level authentication public …\nGenerates a random ECDSA master-level authentication …\nGenerates a random ECDSA master authentication public key …\nGenerates a specified number of random identities using …\nGenerates a specified number of random identities with …\nGenerates a specified number of random identities using …\nGenerates a random identity using the specified version …\nGenerates a random identity with main keys and their …\nGenerates a random identity using the specified version …\nGenerates a random key based on the platform version.\nGenerates a random key based on the platform version.\nReduce the Identity balance\nReturns the revision of the identity.\nSerializes the document.\nSerializes and consumes the document.\nSets the balance of the identity.\nSets the identifier of the identity.\nSets the public keys of the identity.\nSets the revision of the identity.\nfirst object to start with\nStart at document id\nOperations to construct a path query.\nStart at included\nStart info\nConvert the document to a map value.\nConvert the document to an object.\nConvenience method to get underlying buffer as a vec\nState transitions used to put changed objects to the Dash …\nType-specific implementation for various dpp object types …\nVerifies a proof for a collection of documents.\nVerifies the given proof and returns the root hash of the …\nVerifies if a document exists at the beginning of a proof, …\n<code>where</code> clauses for the query\nPoint to a specific document ID.\nAdd order by clause to the query.\nAdd new where clause to the query.\nConstructs a <code>BlockInfo</code> structure from the provided …\nHelper trait for managing Epoch information\nFetch current (the latest) epoch from Platform.\nFetch current (the latest) epoch from Platform with …\nFetch current (the latest) epoch from Platform with …\nAllKeys is an empty message used to signify a request for …\nHow did an identity vote?\nWhat’s the state of a contested resource vote? (ie who …\nWho voted for a contested resource to go to a specific …\nProof message includes cryptographic proofs for validating …\nResponseMetadata provides metadata about the blockchain …\nSearchKey represents a request to search for keys based on …\nSecurityLevelMap maps security levels to a request type …\nSpecificKeys is used to request specific keys by their IDs\nString value of the enum field names used in the ProtoBuf …\nHash of the block ID\nIdentifier of the blockchain\nLatest known core height in consensus\nCurrent epoch number\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>KeyPurpose</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nNested message and enum types in <code>GetConsensusParamsRequest</code>.\nNested message and enum types in <code>GetConsensusParamsResponse</code>…\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in <code>GetDataContractRequest</code>.\nNested message and enum types in <code>GetDataContractResponse</code>.\nNested message and enum types in <code>GetDataContractsRequest</code>.\nNested message and enum types in <code>GetDataContractsResponse</code>.\nNested message and enum types in <code>GetDocumentsRequest</code>.\nNested message and enum types in <code>GetDocumentsResponse</code>.\nNested message and enum types in <code>GetEpochsInfoRequest</code>.\nNested message and enum types in <code>GetEpochsInfoResponse</code>.\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in <code>GetIdentityBalanceRequest</code>.\nNested message and enum types in <code>GetIdentityBalanceResponse</code>…\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in <code>GetIdentityKeysRequest</code>.\nNested message and enum types in <code>GetIdentityKeysResponse</code>.\nNested message and enum types in <code>GetIdentityNonceRequest</code>.\nNested message and enum types in <code>GetIdentityNonceResponse</code>.\nNested message and enum types in <code>GetIdentityRequest</code>.\nNested message and enum types in <code>GetIdentityResponse</code>.\nNested message and enum types in <code>GetPathElementsRequest</code>.\nNested message and enum types in <code>GetPathElementsResponse</code>.\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in <code>GetProofsRequest</code>.\nNested message and enum types in <code>GetProofsResponse</code>.\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nReturns the enum value for the corresponding key in …\nNested message and enum types in <code>GetStatusRequest</code>.\nNested message and enum types in <code>GetStatusResponse</code>.\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nNested message and enum types in …\nGroveDB proof for the data\nCurrent blockchain height\nInserts a key value pair into <code>security_level_map</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>KeyPurpose</code>.\nList of key IDs\nNested message and enum types in <code>KeyRequestType</code>.\nGenerated client implementations.\nProtocol version\nMap of purposes to their security level maps\nHash of the quorum validating the data\nType of the quorum\nConsensus round number\nNested message and enum types in <code>SecurityLevelMap</code>.\nMaps security levels to key request types\nSignature proving data authenticity\nTimestamp in milliseconds\nNested message and enum types in …\nNested message and enum types in …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe blockchain height at which to get the consensus …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nConsensus parameters related to block creation and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nConsensus parameters related to evidence\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum age of evidence, as a duration\nThe maximum age of evidence, in number of blocks\nThe maximum size of a block in bytes\nThe maximum size of evidence in bytes\nThe maximum gas allowed in a block\nDecodes an instance of the message from a buffer, and …\nThe minimum time increment between consecutive blocks, in …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value of <code>identity_id</code>, or the default value if …\nOnly used when vote_choice_type is TOWARDS_IDENTITY\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nNested message and enum types in <code>ResourceVoteChoice</code>.\nSets <code>vote_choice_type</code> to the provided enum value.\nReturns the enum value of <code>vote_choice_type</code>, or the default …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>VoteChoiceType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>VoteChoiceType</code>.\nReturns the value of <code>count</code>, or the default value if <code>count</code> …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the enum value of <code>result_type</code>, or the default if …\nSets <code>result_type</code> to the provided enum value.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ResultType</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ResultType</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the value of <code>abstain_vote_tally</code>, or the default …\nReturns the value of <code>document</code>, or the default value if …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nNested message and enum types in <code>FinishedVoteInfo</code>.\nReturns the enum value of <code>finished_vote_outcome</code>, or the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of <code>lock_vote_tally</code>, or the default value …\nDecodes an instance of the message from a buffer, and …\nSets <code>finished_vote_outcome</code> to the provided enum value.\nReturns the value of <code>vote_count</code>, or the default value if …\nReturns the value of <code>won_by_identity_id</code>, or the default …\nOnly used when vote_choice_type is TOWARDS_IDENTITY\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>FinishedVoteOutcome</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>FinishedVoteOutcome</code>.\nReturns the value of <code>count</code>, or the default value if <code>count</code> …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the value of <code>count</code>, or the default value if <code>count</code> …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe unique ID of the data contract\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of history entries to return\nDecodes an instance of the message from a buffer, and …\nThe offset for pagination through the contract history\nFlag to request a proof as the response\nOnly return results starting at this time in milliseconds\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nCollection of data contract history entries\nThe actual history of the data contract\nRepresents a single entry in the data contract’s history\nCryptographic proof of the data contract history, if …\nList of history entries\nThe date of the history entry\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe value of the data contract at this point in history\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID of the data contract being requested\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetDataContractResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe actual data contract in binary form\nCryptographic proof of the data contract, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nA list of unique IDs for the data contracts being requested\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nDataContracts is a collection of data contract entries.\nThe actual data contract content\nA list of data contract entries\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetDataContractsResponseV0</code>…\nThe unique identifier of the data contract\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe actual data contracts requested\nCryptographic proof for the data contracts, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe ID of the data contract containing the documents\nThe type of document being requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetDocumentsRequestV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of documents to return\nDecodes an instance of the message from a buffer, and …\nOrdering criteria for the documents\nFlag to request a proof as the response\nSpecifies the starting point for the document retrieval\nConditions to be met by the requested documents\nSpecifies the starting point for the document retrieval\nStart retrieval after this document\nStart retrieval at this document\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetDocumentsResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nRepresents a collection of documents\nThe actual documents requested\nCryptographic proof of the documents, if requested\nThe actual documents in binary form\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag indicating if the epochs should be listed in …\nThe number of epochs to retrieve information for\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nThe starting epoch for the request\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetEpochsInfoResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nEpochInfo represents information about a single epoch\nEpochInfos holds a collection of epoch information entries\nThe actual information about the requested epochs\nCryptographic proof of the epoch information, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nList of information for each requested epoch\nThe fee multiplier applicable in this epoch\nThe height of the first block in this epoch\nThe height of the first Core block in this epoch\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe number of the epoch\nThe start time of the epoch\nReturns the value of <code>document_type_name</code>, or the default …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns an iterator which yields the valid enum values …\nAppends the provided enum value to <code>purposes</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the enum value of <code>purpose</code>, or the default if the …\nSets <code>purpose</code> to the provided enum value.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the identity for balance and revision\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe balance and revision data\nProof of the data, if requested\nBalance of the identity\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nRevision number of the identity\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the identity whose balance is requested\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe balance of the requested identity\nProof of the balance, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nThe public key hash of the identity being requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe actual identity data corresponding to the requested …\nCryptographic proof for the identity data, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the identity for key retrieval\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLimit on the number of keys to be returned\nDecodes an instance of the message from a buffer, and …\nOffset for pagination through the keys\nFlag to request a proof as the response\nType of key request: all, specific, or search\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetIdentityKeysResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe actual key data\nProof of the keys data, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetIdentityNonceResponseV0</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID of the identity being requested\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetIdentityResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nThe requested identity data\nProof of the identity data, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetPathElementsResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nList of contract requests\nList of document requests\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetProofsRequestV0</code>.\nList of identity requests\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nContractRequest specifies a request for a data contract …\nDocumentRequest specifies a request for a document proof\nIdentityRequest specifies a request for an identity proof\nID of the contract the document belongs to\nReturns the enum value of <code>document_contested_status</code>, or …\nID of the specific document being requested\nNested message and enum types in <code>DocumentRequest</code>.\nType of document being requested\nIndicates if the document type keeps a history of changes\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the identity for which the proof is requested\nNested message and enum types in <code>IdentityRequest</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the enum value of <code>request_type</code>, or the default if …\nType of identity request\nSets <code>document_contested_status</code> to the provided enum value.\nSets <code>request_type</code> to the provided enum value.\nNested message and enum types in <code>VoteStatusRequest</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>DocumentContestedStatus</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nRequest for the identity’s balance\nRequest for the full identity\nRequest for the identity’s keys\nRequest for the identity’s revision\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetProofsResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nCryptographic proof for the requested data\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nCryptographic proof of the protocol version information, …\nVersionEntry represents a single entry of a protocol …\nVersions holds a collection of version entries\nThe actual protocol version information\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe protocol version number\nList of protocol version entries\nThe vote count for this protocol version\nThe number of vote entries to retrieve\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nThe starting masternode provider transaction hash to …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nCryptographic proof of the version signal information, if …\nVersionSignal represents a single voting signal for a …\nVersionSignals holds a collection of version signal entries\nThe actual version signal information\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe masternode provider transaction hash associated with …\nThe protocol version number that is being voted on\nList of version signal entries\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in <code>GetStatusResponseV0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the value of <code>block</code>, or the default value if <code>block</code> …\nIt will be missing if Drive is not responding\nReturns the value of <code>core_chain_locked_height</code>, or the …\nLatest known core height in consensus. It will be missing …\nReturns the value of <code>epoch</code>, or the default value if <code>epoch</code> …\nIt will be missing if Drive is not responding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value of <code>genesis</code>, or the default value if …\nIt will be missing if Drive is not responding\nPlatform node ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of <code>pro_tx_hash</code>, or the default value if …\nEvo masternode pro tx hash. It will be absent if the node …\nNested message and enum types in <code>Version</code>.\nReturns the value of <code>drive</code>, or the default value if <code>drive</code> …\nIt will be missing if Drive is not responding\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Protocol</code>.\nReturns the value of <code>tenderdash</code>, or the default value if …\nIt will be missing if Tenderdash is not responding\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of <code>limit</code>, or the default value if <code>limit</code> …\nDecodes an instance of the message from a buffer, and …\nReturns the value of <code>offset</code>, or the default value if <code>offset</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nNested message and enum types in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nRequest for all keys\nRequest for keys based on a search criteria\nRequest for specific keys by their IDs\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nHow did an identity vote?\nWhat’s the state of a contested resource vote? (ie who …\nWho voted for a contested resource to go to a specific …\nWhat votes are currently happening for a specific …\nWhat vote polls will end soon?\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nRequest all keys of a particular kind\nRequest the current key of a particular kind\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>KeyKindRequestType</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>KeyKindRequestType</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nFlag to request a proof as the response\nThe hash of the state transition to wait for\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nMetadata about the blockchain state\nNested message and enum types in …\nAny error that occurred during the state transition …\nCryptographic proof for the state transition, if requested\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nState transition identifier\nBroadcast trait representing the action of broadcasting a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the state transition is confirmed\nTrait implemented by objects that can be used to broadcast …\nConverts the current instance into an instance of the …\nA trait for purchasing a document on Platform\nTries to purchase a document on platform Setting settings …\nTries to purchase a document on platform and waits for the …\nWaits for the response of a state transition after it has …\nA trait for putting a contract to platform\nPuts a document on platform setting settings to <code>None</code> sets …\nPuts a contract on platform and waits for the confirmation …\nWaits for the response of a state transition after it has …\nA trait for putting a document to platform\nPuts a document on platform setting settings to <code>None</code> sets …\nPuts an identity on platform and waits for the …\nWaits for the response of a state transition after it has …\nA trait for putting an identity to platform\nPuts an identity on platform\nPuts an identity on platform and waits for the …\nThe options when putting something to platform\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA trait for transferring a document on Platform\nTransfers a document on platform Setting settings to <code>None</code> …\nTransfers a document on platform and waits for the response\nWaits for the response of a state transition after it has …\nA trait for updating the price of a document on Platform\nUpdates the price of a document on platform Setting …\nUpdates the price of a document on platform and waits for …\nWaits for the response of a state transition after it has …\nA trait for putting a vote on platform\nPuts an identity on platform\nPuts an identity on platform and waits for the …\nFunction to withdraw credits from an identity. Returns the …\nEpoch-related types and helpers\nIdentity related types and functions\nHelpers for managing platform version votes\nQuery used to fetch multiple epochs from Platform.\nSort order. Default is ascending (true), which means that …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStarting number of epoch to fetch.\nWrapper around multiple requests for one object type.\nWrapper around multiple responses for one object type.\nPublic key hash that can be used as a Query to find an …\nUnknown or unsupported request type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTODO: Not sure how to do that\nHelper trait for managing MasternodeProtocolVote objects\nFetch masternode votes for version update from Platform.\nA structure to manage DAPI addresses to select from for …\nHow many data contracts fit in the cache.\nThe default identity nonce stale time in seconds\nHow many quorum public keys fit in the cache.\nThe last query timestamp\nDAPI request settings.\nDash Platform SDK\nDash Platform SDK Builder, used to configure and …\na type to represent staleness in seconds\nThe URI component of a request.\nAdds a node Address to AddressList Returns false if the …\nAdd a node Address to AddressList by Uri. Returns false if …\nGet the authority of this <code>Uri</code>.\nGet number of available, not banned addresses.\nBan DAPI address if node not responded or responded with …\nBuild the Sdk instance.\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nReturns a future that resolves when the Sdk is cancelled …\nTimeout for establishing a connection.\nCreate default SdkBuilder that will create a mock client.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConvert a <code>Uri</code> from a static string.\nUpdates or fetches the nonce for a given identity and …\nUpdates or fetches the nonce for a given identity from the …\nRandomly select a not banned address.\nGet the host of this <code>Uri</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a <code>Uri</code> into <code>Parts</code>.\nCheck if the list is empty. Returns true if there are no …\nGet number of all addresses, both banned and not banned.\nReturns a mutable reference to the <code>MockDashPlatformSdk</code> …\nThe network that the sdk is configured for (Dash …\nCreates an empty AddressList with default base ban time.\nCreate a new SdkBuilder with provided address list.\nCreate a new SdkBuilder instance preconfigured mainnet …\nCreate a new SdkBuilder that will generate mock client.\nInitialize Dash Platform  SDK in mock mode.\nCreate a new SdkBuilder instance preconfigured for …\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nIndicate if the sdk should request and verify proofs.\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nNumber of retries until returning the last error.\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nSet the ContextProvider to use.\nRequest shutdown of the Sdk and all related operation.\nStarts the stream to listen for instant send lock messages\nTimeout for a request.\nReturn Dash Platform version information used by this SDK.\nWaits for a response for the asset lock proof\nSet cancellation token that will be used by the Sdk.\nConfigure context provider to use.\nUse Dash Core as a wallet and context provider.\nConfigure directory where dumps of all requests and …\nConfigure network type.\nCreates an empty AddressList with adjustable base ban time.\nConfigure request settings.\nConfigure platform version.")